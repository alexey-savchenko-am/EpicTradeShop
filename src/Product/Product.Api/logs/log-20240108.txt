2024-01-08 15:05:57.869 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-08 15:05:59.657 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-08 15:05:59.660 +03:00 [INF] Quartz Scheduler created
2024-01-08 15:05:59.661 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-08 15:05:59.663 +03:00 [INF] RAMJobStore initialized.
2024-01-08 15:05:59.665 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-08 15:05:59.666 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-08 15:05:59.668 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-08 15:05:59.682 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-08 15:05:59.686 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-08 15:06:00.069 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-08 15:06:00.073 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-08 15:06:00.076 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 15:06:00.078 +03:00 [INF] Hosting environment: Development
2024-01-08 15:06:00.080 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-08 15:06:00.082 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-08 15:06:02.182 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-08 15:07:09.451 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-08 15:07:10.340 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-08 15:07:10.343 +03:00 [INF] Quartz Scheduler created
2024-01-08 15:07:10.346 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-08 15:07:10.348 +03:00 [INF] RAMJobStore initialized.
2024-01-08 15:07:10.350 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-08 15:07:10.352 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-08 15:07:10.354 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-08 15:07:10.366 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-08 15:07:10.370 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-08 15:07:10.632 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-08 15:07:10.635 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-08 15:07:10.638 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 15:07:10.640 +03:00 [INF] Hosting environment: Development
2024-01-08 15:07:10.641 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-08 15:07:10.642 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-08 15:07:13.639 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-08 15:10:18.601 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-08 15:10:19.402 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-08 15:10:19.405 +03:00 [INF] Quartz Scheduler created
2024-01-08 15:10:19.407 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-08 15:10:19.408 +03:00 [INF] RAMJobStore initialized.
2024-01-08 15:10:19.410 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-08 15:10:19.411 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-08 15:10:19.412 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-08 15:10:19.424 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-08 15:10:19.428 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-08 15:10:19.701 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-08 15:10:19.705 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-08 15:10:19.707 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 15:10:19.710 +03:00 [INF] Hosting environment: Development
2024-01-08 15:10:19.711 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-08 15:10:19.712 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-08 15:10:19.942 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-08 15:12:10.615 +03:00 [ERR] HTTP GET /api/products/{productId} responded 500 in 9539.9832 ms
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'LaptopProduct'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__209_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Dapper.SqlMapper.QueryRowAsync[T](IDbConnection cnn, Row row, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 489
   at Product.Infrastructure.Data.QueryServices.ProductsQueryService.GetLaptopProductByIdAsync(IDbConnection connection, ID productId) in D:\Projects\EpicTradeShop\src\Product\Product.Infrastructure\Data\QueryServices\ProductsQueryService.cs:line 103
   at Product.Infrastructure.Data.QueryServices.ProductsQueryService.GetProductByIdAsync(ID productId, CancellationToken cancellationToken) in D:\Projects\EpicTradeShop\src\Product\Product.Infrastructure\Data\QueryServices\ProductsQueryService.cs:line 72
   at Product.Application.Product.Queries.GetById.GetProductByIdQueryHandler.Handle(GetProductByIdQuery request, CancellationToken cancellationToken) in D:\Projects\EpicTradeShop\src\Product\Product.Application\Product\Queries\GetById\GetProductByIdQueryHandler.cs:line 20
   at AppCommon.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in D:\Projects\EpicTradeShop\src\Common\AppCommon\Behaviors\ValidationBehavior.cs:line 38
   at Product.Api.ProductEndpoints.GetById.HandleAsync(GetProductByIdQuery request) in D:\Projects\EpicTradeShop\src\Product\Product.Api\ProductEndpoints\GetById.cs:line 36
   at Product.Api.ProductEndpoints.GetById.<AddRoute>b__2_0(Guid productId) in D:\Projects\EpicTradeShop\src\Product\Product.Api\ProductEndpoints\GetById.cs:line 25
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Presentation.Middlewares.ValidationExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\Projects\EpicTradeShop\src\Common\Presentation\Middlewares\ValidationExceptionHandlingMiddleware.cs:line 20
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
ClientConnectionId:921ca0b3-8713-42fe-a0f5-c7c377fb8fe8
Error Number:208,State:1,Class:16
2024-01-08 15:12:10.710 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'LaptopProduct'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__209_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Dapper.SqlMapper.QueryRowAsync[T](IDbConnection cnn, Row row, Type effectiveType, CommandDefinition command) in /_/Dapper/SqlMapper.Async.cs:line 489
   at Product.Infrastructure.Data.QueryServices.ProductsQueryService.GetLaptopProductByIdAsync(IDbConnection connection, ID productId) in D:\Projects\EpicTradeShop\src\Product\Product.Infrastructure\Data\QueryServices\ProductsQueryService.cs:line 103
   at Product.Infrastructure.Data.QueryServices.ProductsQueryService.GetProductByIdAsync(ID productId, CancellationToken cancellationToken) in D:\Projects\EpicTradeShop\src\Product\Product.Infrastructure\Data\QueryServices\ProductsQueryService.cs:line 72
   at Product.Application.Product.Queries.GetById.GetProductByIdQueryHandler.Handle(GetProductByIdQuery request, CancellationToken cancellationToken) in D:\Projects\EpicTradeShop\src\Product\Product.Application\Product\Queries\GetById\GetProductByIdQueryHandler.cs:line 20
   at AppCommon.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in D:\Projects\EpicTradeShop\src\Common\AppCommon\Behaviors\ValidationBehavior.cs:line 38
   at Product.Api.ProductEndpoints.GetById.HandleAsync(GetProductByIdQuery request) in D:\Projects\EpicTradeShop\src\Product\Product.Api\ProductEndpoints\GetById.cs:line 36
   at Product.Api.ProductEndpoints.GetById.<AddRoute>b__2_0(Guid productId) in D:\Projects\EpicTradeShop\src\Product\Product.Api\ProductEndpoints\GetById.cs:line 25
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Presentation.Middlewares.ValidationExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in D:\Projects\EpicTradeShop\src\Common\Presentation\Middlewares\ValidationExceptionHandlingMiddleware.cs:line 20
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
ClientConnectionId:921ca0b3-8713-42fe-a0f5-c7c377fb8fe8
Error Number:208,State:1,Class:16
2024-01-08 15:13:01.633 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-08 15:13:02.438 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-08 15:13:02.445 +03:00 [INF] Quartz Scheduler created
2024-01-08 15:13:02.447 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-08 15:13:02.449 +03:00 [INF] RAMJobStore initialized.
2024-01-08 15:13:02.450 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-08 15:13:02.451 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-08 15:13:02.453 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-08 15:13:02.465 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-08 15:13:02.469 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-08 15:13:02.779 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-08 15:13:02.783 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-08 15:13:02.786 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 15:13:02.788 +03:00 [INF] Hosting environment: Development
2024-01-08 15:13:02.790 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-08 15:13:02.791 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-08 15:13:06.557 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-08 15:13:14.089 +03:00 [INF] HTTP GET /api/products/{productId} responded 200 in 2449.3923 ms
2024-01-08 15:19:50.861 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-08 15:19:51.699 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-08 15:19:51.702 +03:00 [INF] Quartz Scheduler created
2024-01-08 15:19:51.705 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-08 15:19:51.708 +03:00 [INF] RAMJobStore initialized.
2024-01-08 15:19:51.711 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-08 15:19:51.712 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-08 15:19:51.713 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-08 15:19:51.725 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-08 15:19:51.729 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-08 15:19:52.040 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-08 15:19:52.044 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-08 15:19:52.045 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 15:19:52.047 +03:00 [INF] Hosting environment: Development
2024-01-08 15:19:52.049 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-08 15:19:52.050 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-08 15:19:56.964 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-08 15:22:47.888 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-08 15:22:48.727 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-08 15:22:48.730 +03:00 [INF] Quartz Scheduler created
2024-01-08 15:22:48.732 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-08 15:22:48.734 +03:00 [INF] RAMJobStore initialized.
2024-01-08 15:22:48.736 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-08 15:22:48.738 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-08 15:22:48.740 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-08 15:22:48.751 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-08 15:22:48.755 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-08 15:22:49.039 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-08 15:22:49.043 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-08 15:22:49.045 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 15:22:49.047 +03:00 [INF] Hosting environment: Development
2024-01-08 15:22:49.049 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-08 15:22:49.050 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-08 15:22:54.338 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-08 15:23:07.216 +03:00 [INF] HTTP GET /api/products/{productId} responded 200 in 4983.6232 ms
2024-01-08 15:29:22.232 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-08 15:29:23.048 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-08 15:29:23.051 +03:00 [INF] Quartz Scheduler created
2024-01-08 15:29:23.053 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-08 15:29:23.054 +03:00 [INF] RAMJobStore initialized.
2024-01-08 15:29:23.056 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-08 15:29:23.057 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-08 15:29:23.059 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-08 15:29:23.069 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-08 15:29:23.073 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-08 15:29:23.330 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-08 15:29:23.332 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-08 15:29:23.334 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 15:29:23.335 +03:00 [INF] Hosting environment: Development
2024-01-08 15:29:23.337 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-08 15:29:23.338 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-08 15:29:26.564 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-08 15:29:35.130 +03:00 [INF] HTTP GET /api/products/{productId} responded 200 in 212.9892 ms
2024-01-08 15:30:54.988 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-08 15:30:55.827 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-08 15:30:55.831 +03:00 [INF] Quartz Scheduler created
2024-01-08 15:30:55.833 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-08 15:30:55.834 +03:00 [INF] RAMJobStore initialized.
2024-01-08 15:30:55.836 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-08 15:30:55.838 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-08 15:30:55.839 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-08 15:30:55.853 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-08 15:30:55.856 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-08 15:30:56.102 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-08 15:30:56.105 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-08 15:30:56.106 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 15:30:56.108 +03:00 [INF] Hosting environment: Development
2024-01-08 15:30:56.109 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-08 15:30:56.110 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-08 15:30:56.332 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-08 15:31:55.616 +03:00 [INF] HTTP GET /api/products/{productId} responded 200 in 230.3984 ms
2024-01-08 15:32:11.716 +03:00 [INF] HTTP GET /api/products/{productId} responded 400 in 10.3109 ms
2024-01-08 15:35:29.690 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-08 15:35:30.491 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-08 15:35:30.494 +03:00 [INF] Quartz Scheduler created
2024-01-08 15:35:30.496 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-08 15:35:30.497 +03:00 [INF] RAMJobStore initialized.
2024-01-08 15:35:30.499 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-08 15:35:30.501 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-08 15:35:30.503 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-08 15:35:30.515 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-08 15:35:30.519 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-08 15:35:30.880 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-08 15:35:30.885 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-08 15:35:30.888 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 15:35:30.890 +03:00 [INF] Hosting environment: Development
2024-01-08 15:35:30.892 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-08 15:35:30.894 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-08 15:35:31.420 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-08 15:36:21.929 +03:00 [INF] HTTP GET /api/products/{productId} responded 200 in 263.8306 ms
2024-01-08 15:49:33.614 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-08 15:49:34.786 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-08 15:49:34.788 +03:00 [INF] Quartz Scheduler created
2024-01-08 15:49:34.790 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-08 15:49:34.794 +03:00 [INF] RAMJobStore initialized.
2024-01-08 15:49:34.796 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-08 15:49:34.798 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-08 15:49:34.801 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-08 15:49:34.822 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-08 15:49:34.828 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-08 15:49:35.222 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-08 15:49:35.228 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-08 15:49:35.230 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 15:49:35.234 +03:00 [INF] Hosting environment: Development
2024-01-08 15:49:35.236 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-08 15:49:35.236 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-08 15:49:39.486 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-08 15:49:59.937 +03:00 [INF] HTTP GET /api/products/{productId} responded 200 in 325.3309 ms
2024-01-08 16:39:22.121 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-08 16:39:22.928 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-08 16:39:22.931 +03:00 [INF] Quartz Scheduler created
2024-01-08 16:39:22.932 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-08 16:39:22.934 +03:00 [INF] RAMJobStore initialized.
2024-01-08 16:39:22.935 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-08 16:39:22.937 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-08 16:39:22.938 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-08 16:39:22.948 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-08 16:39:22.952 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-08 16:39:23.280 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-08 16:39:23.283 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-08 16:39:23.284 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 16:39:23.286 +03:00 [INF] Hosting environment: Development
2024-01-08 16:39:23.287 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-08 16:39:23.288 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-08 16:39:28.540 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-08 16:39:47.397 +03:00 [INF] HTTP GET /api/products/{productId} responded 200 in 241.3680 ms
2024-01-08 16:53:43.174 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-08 16:53:43.981 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-08 16:53:43.984 +03:00 [INF] Quartz Scheduler created
2024-01-08 16:53:43.986 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-08 16:53:43.987 +03:00 [INF] RAMJobStore initialized.
2024-01-08 16:53:43.989 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-08 16:53:43.990 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-08 16:53:43.992 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-08 16:53:44.003 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-08 16:53:44.007 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-08 16:53:44.265 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-08 16:53:44.269 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-08 16:53:44.273 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 16:53:44.275 +03:00 [INF] Hosting environment: Development
2024-01-08 16:53:44.278 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-08 16:53:44.278 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-08 16:53:44.737 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-08 17:16:07.804 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-08 17:16:08.593 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-08 17:16:08.596 +03:00 [INF] Quartz Scheduler created
2024-01-08 17:16:08.598 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-08 17:16:08.599 +03:00 [INF] RAMJobStore initialized.
2024-01-08 17:16:08.601 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-08 17:16:08.603 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-08 17:16:08.605 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-08 17:16:08.620 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-08 17:16:08.624 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-08 17:16:08.876 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-08 17:16:08.880 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-08 17:16:08.883 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 17:16:08.885 +03:00 [INF] Hosting environment: Development
2024-01-08 17:16:08.887 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-08 17:16:08.887 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-08 17:16:09.112 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-08 17:18:58.677 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-08 17:18:59.474 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-08 17:18:59.477 +03:00 [INF] Quartz Scheduler created
2024-01-08 17:18:59.478 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-08 17:18:59.480 +03:00 [INF] RAMJobStore initialized.
2024-01-08 17:18:59.481 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-08 17:18:59.483 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-08 17:18:59.484 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-08 17:18:59.494 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-08 17:18:59.498 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-08 17:18:59.745 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-08 17:18:59.747 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-08 17:18:59.749 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 17:18:59.750 +03:00 [INF] Hosting environment: Development
2024-01-08 17:18:59.752 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-08 17:18:59.753 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-08 17:19:04.822 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-08 18:25:27.637 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-08 18:25:28.467 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-08 18:25:28.471 +03:00 [INF] Quartz Scheduler created
2024-01-08 18:25:28.473 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-08 18:25:28.475 +03:00 [INF] RAMJobStore initialized.
2024-01-08 18:25:28.477 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-08 18:25:28.478 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-08 18:25:28.479 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-08 18:25:28.490 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-08 18:25:28.493 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-08 18:25:28.758 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-08 18:25:28.763 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-08 18:25:28.766 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 18:25:28.769 +03:00 [INF] Hosting environment: Development
2024-01-08 18:25:28.772 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-08 18:25:28.773 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-08 18:25:29.323 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-08 18:28:36.407 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-08 18:28:37.504 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-08 18:28:37.508 +03:00 [INF] Quartz Scheduler created
2024-01-08 18:28:37.512 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-08 18:28:37.514 +03:00 [INF] RAMJobStore initialized.
2024-01-08 18:28:37.518 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-08 18:28:37.521 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-08 18:28:37.525 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-08 18:28:37.540 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-08 18:28:37.546 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-08 18:28:37.874 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-08 18:28:37.880 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-08 18:28:37.885 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 18:28:37.888 +03:00 [INF] Hosting environment: Development
2024-01-08 18:28:37.891 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-08 18:28:37.891 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-08 18:28:42.331 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-08 18:34:13.492 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-08 18:34:14.439 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-08 18:34:14.443 +03:00 [INF] Quartz Scheduler created
2024-01-08 18:34:14.445 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-08 18:34:14.446 +03:00 [INF] RAMJobStore initialized.
2024-01-08 18:34:14.448 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-08 18:34:14.449 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-08 18:34:14.450 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-08 18:34:14.462 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-08 18:34:14.467 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-08 18:34:14.771 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-08 18:34:14.774 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-08 18:34:14.777 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 18:34:14.780 +03:00 [INF] Hosting environment: Development
2024-01-08 18:34:14.781 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-08 18:34:14.785 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-08 18:34:17.310 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-08 18:35:09.265 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-08 18:35:10.025 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-08 18:35:10.028 +03:00 [INF] Quartz Scheduler created
2024-01-08 18:35:10.031 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-08 18:35:10.034 +03:00 [INF] RAMJobStore initialized.
2024-01-08 18:35:10.037 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-08 18:35:10.038 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-08 18:35:10.040 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-08 18:35:10.051 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-08 18:35:10.055 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-08 18:35:10.310 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-08 18:35:10.314 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-08 18:35:10.316 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 18:35:10.317 +03:00 [INF] Hosting environment: Development
2024-01-08 18:35:10.319 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-08 18:35:10.319 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-08 18:35:10.535 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-08 18:43:43.391 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-08 18:43:44.256 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-08 18:43:44.259 +03:00 [INF] Quartz Scheduler created
2024-01-08 18:43:44.261 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-08 18:43:44.262 +03:00 [INF] RAMJobStore initialized.
2024-01-08 18:43:44.264 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-08 18:43:44.266 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-08 18:43:44.268 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-08 18:43:44.282 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-08 18:43:44.286 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-08 18:43:44.674 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-08 18:43:44.678 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-08 18:43:44.679 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 18:43:44.682 +03:00 [INF] Hosting environment: Development
2024-01-08 18:43:44.684 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-08 18:43:44.684 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-08 18:43:44.908 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-08 18:44:19.361 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-08 18:44:20.197 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-08 18:44:20.200 +03:00 [INF] Quartz Scheduler created
2024-01-08 18:44:20.203 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-08 18:44:20.206 +03:00 [INF] RAMJobStore initialized.
2024-01-08 18:44:20.208 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-08 18:44:20.210 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-08 18:44:20.213 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-08 18:44:20.235 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-08 18:44:20.238 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-08 18:44:20.495 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-08 18:44:20.500 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-08 18:44:20.503 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 18:44:20.505 +03:00 [INF] Hosting environment: Development
2024-01-08 18:44:20.508 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-08 18:44:20.509 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-08 18:44:24.828 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
