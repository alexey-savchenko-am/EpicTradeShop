2024-01-09 11:12:30.425 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 11:12:32.181 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 11:12:32.184 +03:00 [INF] Quartz Scheduler created
2024-01-09 11:12:32.186 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 11:12:32.189 +03:00 [INF] RAMJobStore initialized.
2024-01-09 11:12:32.191 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 11:12:32.193 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 11:12:32.195 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 11:12:32.212 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 11:12:32.216 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 11:12:32.665 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 11:12:32.671 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 11:12:32.673 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 11:12:32.676 +03:00 [INF] Hosting environment: Development
2024-01-09 11:12:32.677 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 11:12:32.686 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 11:12:35.266 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 11:14:22.510 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 11:14:23.368 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 11:14:23.371 +03:00 [INF] Quartz Scheduler created
2024-01-09 11:14:23.373 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 11:14:23.374 +03:00 [INF] RAMJobStore initialized.
2024-01-09 11:14:23.376 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 11:14:23.378 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 11:14:23.379 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 11:14:23.391 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 11:14:23.394 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 11:14:23.686 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 11:14:23.688 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 11:14:23.691 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 11:14:23.693 +03:00 [INF] Hosting environment: Development
2024-01-09 11:14:23.695 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 11:14:23.695 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 11:14:27.439 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 11:14:47.018 +03:00 [INF] HTTP GET /api/products/{productId} responded 200 in 284.3527 ms
2024-01-09 11:21:36.865 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 11:21:38.088 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 11:21:38.091 +03:00 [INF] Quartz Scheduler created
2024-01-09 11:21:38.093 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 11:21:38.095 +03:00 [INF] RAMJobStore initialized.
2024-01-09 11:21:38.098 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 11:21:38.100 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 11:21:38.102 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 11:21:38.124 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 11:21:38.128 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 11:21:38.501 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 11:21:38.504 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 11:21:38.507 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 11:21:38.509 +03:00 [INF] Hosting environment: Development
2024-01-09 11:21:38.511 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 11:21:38.514 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 11:21:42.749 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 11:32:46.532 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 11:32:47.468 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 11:32:47.471 +03:00 [INF] Quartz Scheduler created
2024-01-09 11:32:47.472 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 11:32:47.474 +03:00 [INF] RAMJobStore initialized.
2024-01-09 11:32:47.475 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 11:32:47.476 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 11:32:47.478 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 11:32:47.489 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 11:32:47.493 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 11:32:47.757 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 11:32:47.760 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 11:32:47.763 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 11:32:47.765 +03:00 [INF] Hosting environment: Development
2024-01-09 11:32:47.766 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 11:32:47.767 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 11:32:52.923 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 11:35:18.546 +03:00 [INF] HTTP GET /api/products/{productId} responded 200 in 244.3744 ms
2024-01-09 11:37:05.510 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 11:37:06.327 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 11:37:06.330 +03:00 [INF] Quartz Scheduler created
2024-01-09 11:37:06.332 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 11:37:06.333 +03:00 [INF] RAMJobStore initialized.
2024-01-09 11:37:06.334 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 11:37:06.336 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 11:37:06.337 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 11:37:06.348 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 11:37:06.351 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 11:37:06.597 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 11:37:06.599 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 11:37:06.601 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 11:37:06.602 +03:00 [INF] Hosting environment: Development
2024-01-09 11:37:06.604 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 11:37:06.605 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 11:37:11.641 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 11:38:23.926 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 11:38:24.753 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 11:38:24.756 +03:00 [INF] Quartz Scheduler created
2024-01-09 11:38:24.757 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 11:38:24.759 +03:00 [INF] RAMJobStore initialized.
2024-01-09 11:38:24.760 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 11:38:24.761 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 11:38:24.763 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 11:38:24.775 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 11:38:24.779 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 11:38:25.044 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 11:38:25.048 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 11:38:25.050 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 11:38:25.052 +03:00 [INF] Hosting environment: Development
2024-01-09 11:38:25.054 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 11:38:25.054 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 11:38:25.412 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 11:44:42.429 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 11:44:43.312 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 11:44:43.314 +03:00 [INF] Quartz Scheduler created
2024-01-09 11:44:43.317 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 11:44:43.319 +03:00 [INF] RAMJobStore initialized.
2024-01-09 11:44:43.320 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 11:44:43.322 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 11:44:43.324 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 11:44:43.338 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 11:44:43.343 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 11:44:43.632 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 11:44:43.635 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 11:44:43.638 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 11:44:43.641 +03:00 [INF] Hosting environment: Development
2024-01-09 11:44:43.642 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 11:44:43.644 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 11:44:48.678 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 12:12:33.449 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 12:12:34.492 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 12:12:34.494 +03:00 [INF] Quartz Scheduler created
2024-01-09 12:12:34.498 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 12:12:34.500 +03:00 [INF] RAMJobStore initialized.
2024-01-09 12:12:34.501 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 12:12:34.503 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 12:12:34.505 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 12:12:34.518 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 12:12:34.522 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 12:12:34.855 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 12:12:34.863 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 12:12:34.867 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 12:12:34.870 +03:00 [INF] Hosting environment: Development
2024-01-09 12:12:34.871 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 12:12:34.876 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 12:12:35.497 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 12:13:41.727 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 12:13:42.641 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 12:13:42.645 +03:00 [INF] Quartz Scheduler created
2024-01-09 12:13:42.647 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 12:13:42.648 +03:00 [INF] RAMJobStore initialized.
2024-01-09 12:13:42.650 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 12:13:42.651 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 12:13:42.652 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 12:13:42.664 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 12:13:42.669 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 12:13:42.953 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 12:13:42.958 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 12:13:42.962 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 12:13:42.965 +03:00 [INF] Hosting environment: Development
2024-01-09 12:13:42.968 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 12:13:42.968 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 12:13:48.034 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 12:14:55.298 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 12:14:56.082 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 12:14:56.085 +03:00 [INF] Quartz Scheduler created
2024-01-09 12:14:56.087 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 12:14:56.090 +03:00 [INF] RAMJobStore initialized.
2024-01-09 12:14:56.094 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 12:14:56.097 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 12:14:56.100 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 12:14:56.113 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 12:14:56.116 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 12:14:56.396 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 12:14:56.399 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 12:14:56.401 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 12:14:56.403 +03:00 [INF] Hosting environment: Development
2024-01-09 12:14:56.404 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 12:14:56.405 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 12:14:56.630 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 12:19:52.639 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 12:19:53.452 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 12:19:53.454 +03:00 [INF] Quartz Scheduler created
2024-01-09 12:19:53.456 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 12:19:53.458 +03:00 [INF] RAMJobStore initialized.
2024-01-09 12:19:53.459 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 12:19:53.461 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 12:19:53.462 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 12:19:53.474 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 12:19:53.477 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 12:19:53.732 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 12:19:53.740 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 12:19:53.742 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 12:19:53.744 +03:00 [INF] Hosting environment: Development
2024-01-09 12:19:53.746 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 12:19:53.747 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 12:19:54.309 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 12:20:12.969 +03:00 [INF] HTTP GET /api/products/{productId} responded 200 in 229.9422 ms
2024-01-09 12:20:32.773 +03:00 [INF] HTTP GET /api/products responded 200 in 2612.4170 ms
2024-01-09 18:07:39.393 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 18:07:41.051 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 18:07:41.053 +03:00 [INF] Quartz Scheduler created
2024-01-09 18:07:41.055 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 18:07:41.056 +03:00 [INF] RAMJobStore initialized.
2024-01-09 18:07:41.057 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 18:07:41.060 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 18:07:41.061 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 18:07:41.073 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 18:07:41.077 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 18:07:41.417 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 18:07:41.421 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 18:07:41.423 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 18:07:41.425 +03:00 [INF] Hosting environment: Development
2024-01-09 18:07:41.427 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 18:07:41.428 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 18:07:44.687 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 18:08:26.033 +03:00 [INF] HTTP GET /api/products/{productId} responded 200 in 375.4970 ms
2024-01-09 18:09:34.763 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 18:09:35.592 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 18:09:35.595 +03:00 [INF] Quartz Scheduler created
2024-01-09 18:09:35.597 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 18:09:35.598 +03:00 [INF] RAMJobStore initialized.
2024-01-09 18:09:35.600 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 18:09:35.601 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 18:09:35.602 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 18:09:35.613 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 18:09:35.617 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 18:09:35.884 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 18:09:35.887 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 18:09:35.890 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 18:09:35.891 +03:00 [INF] Hosting environment: Development
2024-01-09 18:09:35.893 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 18:09:35.894 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 18:09:41.147 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 18:09:47.542 +03:00 [INF] HTTP GET /api/products/5c86ac14-d752-4b62-a928-89660124bfad responded 200 in 213.2135 ms
2024-01-09 18:10:52.397 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 18:10:53.268 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 18:10:53.270 +03:00 [INF] Quartz Scheduler created
2024-01-09 18:10:53.273 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 18:10:53.275 +03:00 [INF] RAMJobStore initialized.
2024-01-09 18:10:53.277 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 18:10:53.278 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 18:10:53.280 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 18:10:53.292 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 18:10:53.296 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 18:10:53.568 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 18:10:53.572 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 18:10:53.574 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 18:10:53.577 +03:00 [INF] Hosting environment: Development
2024-01-09 18:10:53.578 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 18:10:53.579 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 18:10:54.424 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The endpoint 'HTTP: GET api/products/{productId}' does not have an associated API version set. Are you missing a call to NewVersionedApi or WithApiVersionSet.
   at Microsoft.AspNetCore.Builder.IEndpointConventionBuilderExtensions.AddMetadata(EndpointBuilder builder, Object item)
   at Microsoft.AspNetCore.Builder.IEndpointConventionBuilderExtensions.<>c__DisplayClass5_0`1.<MapToApiVersion>b__0(EndpointBuilder endpoint)
   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.CreateRouteEndpointBuilder(RouteEntry entry, RoutePattern groupPrefix, IReadOnlyList`1 groupConventions, IReadOnlyList`1 groupFinallyConventions)
   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.get_Endpoints()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.CreateEndpointsUnsynchronized()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.EnsureEndpointsInitialized()
   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.Initialize()
   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)
   at Microsoft.AspNetCore.Routing.Matching.DataSourceDependentMatcher..ctor(EndpointDataSource dataSource, Lifetime lifetime, Func`1 matcherBuilderFactory)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcherFactory.CreateMatcher(EndpointDataSource dataSource)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.InitializeCoreAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.<Invoke>g__AwaitMatcher|8_0(EndpointRoutingMiddleware middleware, HttpContext httpContext, Task`1 matcherTask)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-01-09 18:10:54.850 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The endpoint 'HTTP: GET api/products/{productId}' does not have an associated API version set. Are you missing a call to NewVersionedApi or WithApiVersionSet.
   at Microsoft.AspNetCore.Builder.IEndpointConventionBuilderExtensions.AddMetadata(EndpointBuilder builder, Object item)
   at Microsoft.AspNetCore.Builder.IEndpointConventionBuilderExtensions.<>c__DisplayClass5_0`1.<MapToApiVersion>b__0(EndpointBuilder endpoint)
   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.CreateRouteEndpointBuilder(RouteEntry entry, RoutePattern groupPrefix, IReadOnlyList`1 groupConventions, IReadOnlyList`1 groupFinallyConventions)
   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.get_Endpoints()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.CreateEndpointsUnsynchronized()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.EnsureEndpointsInitialized()
   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.Initialize()
   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)
   at Microsoft.AspNetCore.Routing.Matching.DataSourceDependentMatcher..ctor(EndpointDataSource dataSource, Lifetime lifetime, Func`1 matcherBuilderFactory)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcherFactory.CreateMatcher(EndpointDataSource dataSource)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.InitializeCoreAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.<Invoke>g__AwaitMatcher|8_0(EndpointRoutingMiddleware middleware, HttpContext httpContext, Task`1 matcherTask)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-01-09 18:10:58.759 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 18:12:06.945 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 18:12:07.750 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 18:12:07.754 +03:00 [INF] Quartz Scheduler created
2024-01-09 18:12:07.757 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 18:12:07.758 +03:00 [INF] RAMJobStore initialized.
2024-01-09 18:12:07.760 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 18:12:07.761 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 18:12:07.762 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 18:12:07.780 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 18:12:07.786 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 18:12:08.051 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 18:12:08.054 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 18:12:08.056 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 18:12:08.059 +03:00 [INF] Hosting environment: Development
2024-01-09 18:12:08.061 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 18:12:08.062 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 18:12:08.615 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The endpoint 'HTTP: GET api/products/{productId}' does not have an associated API version set. Are you missing a call to NewVersionedApi or WithApiVersionSet.
   at Microsoft.AspNetCore.Builder.IEndpointConventionBuilderExtensions.AddMetadata(EndpointBuilder builder, Object item)
   at Microsoft.AspNetCore.Builder.IEndpointConventionBuilderExtensions.<>c__DisplayClass5_0`1.<MapToApiVersion>b__0(EndpointBuilder endpoint)
   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.CreateRouteEndpointBuilder(RouteEntry entry, RoutePattern groupPrefix, IReadOnlyList`1 groupConventions, IReadOnlyList`1 groupFinallyConventions)
   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.get_Endpoints()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.CreateEndpointsUnsynchronized()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.EnsureEndpointsInitialized()
   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.Initialize()
   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)
   at Microsoft.AspNetCore.Routing.Matching.DataSourceDependentMatcher..ctor(EndpointDataSource dataSource, Lifetime lifetime, Func`1 matcherBuilderFactory)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcherFactory.CreateMatcher(EndpointDataSource dataSource)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.InitializeCoreAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.<Invoke>g__AwaitMatcher|8_0(EndpointRoutingMiddleware middleware, HttpContext httpContext, Task`1 matcherTask)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-01-09 18:12:09.023 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The endpoint 'HTTP: GET api/products/{productId}' does not have an associated API version set. Are you missing a call to NewVersionedApi or WithApiVersionSet.
   at Microsoft.AspNetCore.Builder.IEndpointConventionBuilderExtensions.AddMetadata(EndpointBuilder builder, Object item)
   at Microsoft.AspNetCore.Builder.IEndpointConventionBuilderExtensions.<>c__DisplayClass5_0`1.<MapToApiVersion>b__0(EndpointBuilder endpoint)
   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.CreateRouteEndpointBuilder(RouteEntry entry, RoutePattern groupPrefix, IReadOnlyList`1 groupConventions, IReadOnlyList`1 groupFinallyConventions)
   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.get_Endpoints()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.CreateEndpointsUnsynchronized()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.EnsureEndpointsInitialized()
   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.Initialize()
   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)
   at Microsoft.AspNetCore.Routing.Matching.DataSourceDependentMatcher..ctor(EndpointDataSource dataSource, Lifetime lifetime, Func`1 matcherBuilderFactory)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcherFactory.CreateMatcher(EndpointDataSource dataSource)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.InitializeCoreAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.<Invoke>g__AwaitMatcher|8_0(EndpointRoutingMiddleware middleware, HttpContext httpContext, Task`1 matcherTask)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-01-09 18:12:11.819 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 19:07:32.473 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 19:07:33.962 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 19:07:33.965 +03:00 [INF] Quartz Scheduler created
2024-01-09 19:07:33.968 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 19:07:33.970 +03:00 [INF] RAMJobStore initialized.
2024-01-09 19:07:33.973 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 19:07:33.974 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 19:07:33.976 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 19:07:33.987 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 19:07:33.992 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 19:07:34.468 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 19:07:34.471 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 19:07:34.473 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 19:07:34.474 +03:00 [INF] Hosting environment: Development
2024-01-09 19:07:34.476 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 19:07:34.477 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 19:07:35.490 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The endpoint 'HTTP: GET api/products/{productId}' does not have an associated API version set. Are you missing a call to NewVersionedApi or WithApiVersionSet.
   at Microsoft.AspNetCore.Builder.IEndpointConventionBuilderExtensions.AddMetadata(EndpointBuilder builder, Object item)
   at Microsoft.AspNetCore.Builder.IEndpointConventionBuilderExtensions.<>c__DisplayClass5_0`1.<MapToApiVersion>b__0(EndpointBuilder endpoint)
   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.CreateRouteEndpointBuilder(RouteEntry entry, RoutePattern groupPrefix, IReadOnlyList`1 groupConventions, IReadOnlyList`1 groupFinallyConventions)
   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.get_Endpoints()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.CreateEndpointsUnsynchronized()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.EnsureEndpointsInitialized()
   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.Initialize()
   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)
   at Microsoft.AspNetCore.Routing.Matching.DataSourceDependentMatcher..ctor(EndpointDataSource dataSource, Lifetime lifetime, Func`1 matcherBuilderFactory)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcherFactory.CreateMatcher(EndpointDataSource dataSource)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.InitializeCoreAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.<Invoke>g__AwaitMatcher|8_0(EndpointRoutingMiddleware middleware, HttpContext httpContext, Task`1 matcherTask)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-01-09 19:07:35.926 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The endpoint 'HTTP: GET api/products/{productId}' does not have an associated API version set. Are you missing a call to NewVersionedApi or WithApiVersionSet.
   at Microsoft.AspNetCore.Builder.IEndpointConventionBuilderExtensions.AddMetadata(EndpointBuilder builder, Object item)
   at Microsoft.AspNetCore.Builder.IEndpointConventionBuilderExtensions.<>c__DisplayClass5_0`1.<MapToApiVersion>b__0(EndpointBuilder endpoint)
   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.CreateRouteEndpointBuilder(RouteEntry entry, RoutePattern groupPrefix, IReadOnlyList`1 groupConventions, IReadOnlyList`1 groupFinallyConventions)
   at Microsoft.AspNetCore.Routing.RouteEndpointDataSource.get_Endpoints()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.CreateEndpointsUnsynchronized()
   at Microsoft.AspNetCore.Routing.CompositeEndpointDataSource.EnsureEndpointsInitialized()
   at Microsoft.AspNetCore.Routing.DataSourceDependentCache`1.Initialize()
   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)
   at Microsoft.AspNetCore.Routing.Matching.DataSourceDependentMatcher..ctor(EndpointDataSource dataSource, Lifetime lifetime, Func`1 matcherBuilderFactory)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcherFactory.CreateMatcher(EndpointDataSource dataSource)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.InitializeCoreAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.<Invoke>g__AwaitMatcher|8_0(EndpointRoutingMiddleware middleware, HttpContext httpContext, Task`1 matcherTask)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-01-09 19:07:44.010 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 19:16:33.818 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 19:16:34.785 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 19:16:34.788 +03:00 [INF] Quartz Scheduler created
2024-01-09 19:16:34.789 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 19:16:34.791 +03:00 [INF] RAMJobStore initialized.
2024-01-09 19:16:34.793 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 19:16:34.794 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 19:16:34.796 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 19:16:34.806 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 19:16:34.810 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 19:16:35.075 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 19:16:35.080 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 19:16:35.084 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 19:16:35.086 +03:00 [INF] Hosting environment: Development
2024-01-09 19:16:35.088 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 19:16:35.089 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 19:16:39.577 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 19:17:24.054 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 19:17:24.882 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 19:17:24.884 +03:00 [INF] Quartz Scheduler created
2024-01-09 19:17:24.886 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 19:17:24.887 +03:00 [INF] RAMJobStore initialized.
2024-01-09 19:17:24.889 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 19:17:24.891 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 19:17:24.892 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 19:17:24.903 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 19:17:24.907 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 19:17:25.174 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 19:17:25.179 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 19:17:25.181 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 19:17:25.183 +03:00 [INF] Hosting environment: Development
2024-01-09 19:17:25.184 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 19:17:25.185 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 19:17:30.413 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 19:18:43.776 +03:00 [INF] HTTP POST /api/products/laptop responded 400 in 3812.0717 ms
2024-01-09 19:23:14.661 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 19:23:15.468 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 19:23:15.471 +03:00 [INF] Quartz Scheduler created
2024-01-09 19:23:15.473 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 19:23:15.474 +03:00 [INF] RAMJobStore initialized.
2024-01-09 19:23:15.475 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 19:23:15.477 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 19:23:15.478 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 19:23:15.489 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 19:23:15.494 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 19:23:15.750 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 19:23:15.753 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 19:23:15.755 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 19:23:15.756 +03:00 [INF] Hosting environment: Development
2024-01-09 19:23:15.757 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 19:23:15.758 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 19:23:21.026 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 19:23:25.938 +03:00 [INF] HTTP GET /favicon.ico responded 404 in 1.6132 ms
2024-01-09 19:26:29.362 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 19:26:30.158 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 19:26:30.161 +03:00 [INF] Quartz Scheduler created
2024-01-09 19:26:30.163 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 19:26:30.165 +03:00 [INF] RAMJobStore initialized.
2024-01-09 19:26:30.166 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 19:26:30.168 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 19:26:30.169 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 19:26:30.180 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 19:26:30.184 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 19:26:30.447 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 19:26:30.451 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 19:26:30.453 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 19:26:30.455 +03:00 [INF] Hosting environment: Development
2024-01-09 19:26:30.457 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 19:26:30.457 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 19:26:30.716 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 19:27:01.344 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 19:27:02.162 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 19:27:02.165 +03:00 [INF] Quartz Scheduler created
2024-01-09 19:27:02.168 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 19:27:02.170 +03:00 [INF] RAMJobStore initialized.
2024-01-09 19:27:02.172 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 19:27:02.173 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 19:27:02.175 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 19:27:02.187 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 19:27:02.190 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 19:27:02.464 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 19:27:02.468 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 19:27:02.469 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 19:27:02.471 +03:00 [INF] Hosting environment: Development
2024-01-09 19:27:02.472 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 19:27:02.474 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 19:27:02.719 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 19:46:56.214 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 19:46:57.031 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 19:46:57.034 +03:00 [INF] Quartz Scheduler created
2024-01-09 19:46:57.035 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 19:46:57.036 +03:00 [INF] RAMJobStore initialized.
2024-01-09 19:46:57.038 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 19:46:57.039 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 19:46:57.040 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 19:46:57.051 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 19:46:57.055 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 19:46:57.339 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 19:46:57.342 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 19:46:57.344 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 19:46:57.346 +03:00 [INF] Hosting environment: Development
2024-01-09 19:46:57.348 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 19:46:57.348 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 19:47:02.300 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 19:51:30.367 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 19:51:31.212 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 19:51:31.214 +03:00 [INF] Quartz Scheduler created
2024-01-09 19:51:31.216 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 19:51:31.218 +03:00 [INF] RAMJobStore initialized.
2024-01-09 19:51:31.220 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 19:51:31.221 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 19:51:31.222 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 19:51:31.233 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 19:51:31.237 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 19:51:31.509 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 19:51:31.512 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 19:51:31.515 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 19:51:31.517 +03:00 [INF] Hosting environment: Development
2024-01-09 19:51:31.519 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 19:51:31.520 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 19:51:40.593 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 19:53:32.820 +03:00 [INF] HTTP GET /hello responded 400 in 3.7797 ms
2024-01-09 19:53:58.910 +03:00 [INF] HTTP POST /api/products/laptop responded 400 in 0.0591 ms
2024-01-09 19:56:28.674 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 19:56:29.516 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 19:56:29.518 +03:00 [INF] Quartz Scheduler created
2024-01-09 19:56:29.520 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 19:56:29.521 +03:00 [INF] RAMJobStore initialized.
2024-01-09 19:56:29.523 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 19:56:29.524 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 19:56:29.525 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 19:56:29.537 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 19:56:29.540 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 19:56:29.809 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 19:56:29.813 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 19:56:29.815 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 19:56:29.817 +03:00 [INF] Hosting environment: Development
2024-01-09 19:56:29.819 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 19:56:29.819 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 19:56:34.414 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 19:57:45.295 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 19:57:46.108 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 19:57:46.111 +03:00 [INF] Quartz Scheduler created
2024-01-09 19:57:46.113 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 19:57:46.114 +03:00 [INF] RAMJobStore initialized.
2024-01-09 19:57:46.116 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 19:57:46.117 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 19:57:46.118 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 19:57:46.130 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 19:57:46.134 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 19:57:46.393 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 19:57:46.396 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 19:57:46.398 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 19:57:46.400 +03:00 [INF] Hosting environment: Development
2024-01-09 19:57:46.401 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 19:57:46.402 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 19:57:50.707 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 19:57:59.670 +03:00 [INF] HTTP POST /api/v2/products/laptop responded 400 in 2386.5435 ms
2024-01-09 19:58:33.730 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 19:58:34.718 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 19:58:34.721 +03:00 [INF] Quartz Scheduler created
2024-01-09 19:58:34.723 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 19:58:34.725 +03:00 [INF] RAMJobStore initialized.
2024-01-09 19:58:34.727 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 19:58:34.729 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 19:58:34.730 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 19:58:34.742 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 19:58:34.745 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 19:58:35.090 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 19:58:35.094 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 19:58:35.096 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 19:58:35.098 +03:00 [INF] Hosting environment: Development
2024-01-09 19:58:35.100 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 19:58:35.100 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 19:58:36.379 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 20:04:26.586 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 20:04:27.393 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 20:04:27.396 +03:00 [INF] Quartz Scheduler created
2024-01-09 20:04:27.397 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 20:04:27.398 +03:00 [INF] RAMJobStore initialized.
2024-01-09 20:04:27.400 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 20:04:27.401 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 20:04:27.402 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 20:04:27.414 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 20:04:27.417 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 20:04:27.672 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 20:04:27.674 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 20:04:27.676 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 20:04:27.678 +03:00 [INF] Hosting environment: Development
2024-01-09 20:04:27.679 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 20:04:27.680 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 20:04:46.642 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 20:06:50.003 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 20:06:50.832 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 20:06:50.834 +03:00 [INF] Quartz Scheduler created
2024-01-09 20:06:50.836 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 20:06:50.840 +03:00 [INF] RAMJobStore initialized.
2024-01-09 20:06:50.843 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 20:06:50.845 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 20:06:50.848 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 20:06:50.860 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 20:06:50.864 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 20:06:51.146 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 20:06:51.149 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 20:06:51.151 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 20:06:51.153 +03:00 [INF] Hosting environment: Development
2024-01-09 20:06:51.154 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 20:06:51.155 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 20:07:00.099 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 20:09:05.679 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 20:09:06.556 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 20:09:06.558 +03:00 [INF] Quartz Scheduler created
2024-01-09 20:09:06.562 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 20:09:06.564 +03:00 [INF] RAMJobStore initialized.
2024-01-09 20:09:06.566 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 20:09:06.568 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 20:09:06.570 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 20:09:06.582 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 20:09:06.587 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 20:09:06.843 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 20:09:06.846 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 20:09:06.848 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 20:09:06.850 +03:00 [INF] Hosting environment: Development
2024-01-09 20:09:06.851 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 20:09:06.852 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 20:09:18.242 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 20:09:18.616 +03:00 [INF] HTTP GET /swagger/v1/swagger.json responded 404 in 3.2214 ms
2024-01-09 20:11:55.691 +03:00 [INF] HTTP GET /swagger/v1/swagger.json responded 404 in 0.0983 ms
2024-01-09 20:12:10.229 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 20:12:11.014 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 20:12:11.017 +03:00 [INF] Quartz Scheduler created
2024-01-09 20:12:11.019 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 20:12:11.021 +03:00 [INF] RAMJobStore initialized.
2024-01-09 20:12:11.023 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 20:12:11.025 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 20:12:11.026 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 20:12:11.038 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 20:12:11.042 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 20:12:11.293 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 20:12:11.295 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 20:12:11.297 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 20:12:11.299 +03:00 [INF] Hosting environment: Development
2024-01-09 20:12:11.300 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 20:12:11.301 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 20:12:11.550 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 20:36:43.402 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 20:36:44.283 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 20:36:44.286 +03:00 [INF] Quartz Scheduler created
2024-01-09 20:36:44.288 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 20:36:44.289 +03:00 [INF] RAMJobStore initialized.
2024-01-09 20:36:44.291 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 20:36:44.293 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 20:36:44.296 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 20:36:44.308 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 20:36:44.312 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 20:36:44.592 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 20:36:44.596 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 20:36:44.598 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 20:36:44.600 +03:00 [INF] Hosting environment: Development
2024-01-09 20:36:44.602 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 20:36:44.603 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 20:36:49.607 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 20:37:46.923 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 20:37:47.833 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 20:37:47.835 +03:00 [INF] Quartz Scheduler created
2024-01-09 20:37:47.838 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 20:37:47.840 +03:00 [INF] RAMJobStore initialized.
2024-01-09 20:37:47.843 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 20:37:47.845 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 20:37:47.848 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 20:37:47.865 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 20:37:47.868 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 20:37:48.156 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 20:37:48.160 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 20:37:48.163 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 20:37:48.164 +03:00 [INF] Hosting environment: Development
2024-01-09 20:37:48.166 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 20:37:48.168 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 20:38:34.145 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 20:39:51.977 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 20:39:52.832 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 20:39:52.836 +03:00 [INF] Quartz Scheduler created
2024-01-09 20:39:52.839 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 20:39:52.842 +03:00 [INF] RAMJobStore initialized.
2024-01-09 20:39:52.844 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 20:39:52.845 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 20:39:52.848 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 20:39:52.861 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 20:39:52.866 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 20:39:53.152 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 20:39:53.157 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 20:39:53.159 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 20:39:53.161 +03:00 [INF] Hosting environment: Development
2024-01-09 20:39:53.162 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 20:39:53.164 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 20:39:58.276 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 20:41:50.571 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 20:41:51.444 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 20:41:51.447 +03:00 [INF] Quartz Scheduler created
2024-01-09 20:41:51.448 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 20:41:51.451 +03:00 [INF] RAMJobStore initialized.
2024-01-09 20:41:51.453 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 20:41:51.454 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 20:41:51.455 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 20:41:51.466 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 20:41:51.470 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 20:41:51.747 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 20:41:51.751 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 20:41:51.753 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 20:41:51.756 +03:00 [INF] Hosting environment: Development
2024-01-09 20:41:51.758 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 20:41:51.760 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 20:41:54.813 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 20:42:07.112 +03:00 [INF] HTTP GET /hello responded 400 in 2.6011 ms
2024-01-09 20:44:23.398 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 20:44:24.245 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 20:44:24.248 +03:00 [INF] Quartz Scheduler created
2024-01-09 20:44:24.250 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 20:44:24.252 +03:00 [INF] RAMJobStore initialized.
2024-01-09 20:44:24.253 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 20:44:24.255 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 20:44:24.256 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 20:44:24.268 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 20:44:24.272 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 20:44:24.535 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 20:44:24.538 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 20:44:24.540 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 20:44:24.542 +03:00 [INF] Hosting environment: Development
2024-01-09 20:44:24.543 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 20:44:24.545 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 20:44:29.319 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 20:44:46.995 +03:00 [INF] HTTP GET /api/products responded 200 in 4281.1498 ms
2024-01-09 21:40:46.939 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 21:40:47.878 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 21:40:47.881 +03:00 [INF] Quartz Scheduler created
2024-01-09 21:40:47.882 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 21:40:47.884 +03:00 [INF] RAMJobStore initialized.
2024-01-09 21:40:47.885 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 21:40:47.886 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 21:40:47.889 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 21:40:47.900 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 21:40:47.905 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 21:40:48.173 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 21:40:48.176 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 21:40:48.178 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 21:40:48.179 +03:00 [INF] Hosting environment: Development
2024-01-09 21:40:48.181 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 21:40:48.182 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 21:40:52.964 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 21:41:08.089 +03:00 [INF] HTTP GET /api/products/5c86ac14-d752-4b62-a928-89660124bfad responded 400 in 2.3088 ms
2024-01-09 21:42:18.650 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 21:42:19.540 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 21:42:19.543 +03:00 [INF] Quartz Scheduler created
2024-01-09 21:42:19.545 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 21:42:19.547 +03:00 [INF] RAMJobStore initialized.
2024-01-09 21:42:19.548 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 21:42:19.549 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 21:42:19.551 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 21:42:19.562 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 21:42:19.566 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 21:42:19.883 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 21:42:19.888 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 21:42:19.891 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 21:42:19.894 +03:00 [INF] Hosting environment: Development
2024-01-09 21:42:19.897 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 21:42:19.897 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 21:42:24.156 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 21:42:36.649 +03:00 [INF] HTTP GET /api/v2/products/5c86ac14-d752-4b62-a928-89660124bfad responded 200 in 226.7999 ms
2024-01-09 21:50:40.160 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 21:50:41.021 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 21:50:41.024 +03:00 [INF] Quartz Scheduler created
2024-01-09 21:50:41.026 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 21:50:41.028 +03:00 [INF] RAMJobStore initialized.
2024-01-09 21:50:41.030 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 21:50:41.032 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 21:50:41.034 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 21:50:41.045 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 21:50:41.049 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 21:50:41.406 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 21:50:41.410 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 21:50:41.411 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 21:50:41.413 +03:00 [INF] Hosting environment: Development
2024-01-09 21:50:41.414 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 21:50:41.415 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 21:50:44.033 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 21:55:40.743 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 21:55:41.615 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 21:55:41.618 +03:00 [INF] Quartz Scheduler created
2024-01-09 21:55:41.619 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 21:55:41.621 +03:00 [INF] RAMJobStore initialized.
2024-01-09 21:55:41.623 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 21:55:41.625 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 21:55:41.626 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 21:55:41.639 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 21:55:41.643 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 21:55:41.902 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 21:55:41.905 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 21:55:41.907 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 21:55:41.909 +03:00 [INF] Hosting environment: Development
2024-01-09 21:55:41.911 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 21:55:41.911 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 21:55:47.093 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-01-09 21:56:01.762 +03:00 [INF] HTTP GET /api/v1/products responded 200 in 5450.5991 ms
2024-01-09 22:03:51.389 +03:00 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2024-01-09 22:03:52.247 +03:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2024-01-09 22:03:52.250 +03:00 [INF] Quartz Scheduler created
2024-01-09 22:03:52.252 +03:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2024-01-09 22:03:52.255 +03:00 [INF] RAMJobStore initialized.
2024-01-09 22:03:52.259 +03:00 [INF] Quartz Scheduler 3.8.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2024-01-09 22:03:52.262 +03:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2024-01-09 22:03:52.264 +03:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2024-01-09 22:03:52.279 +03:00 [INF] Adding 1 jobs, 1 triggers.
2024-01-09 22:03:52.284 +03:00 [INF] Adding job: DEFAULT.ProcessOutboxMessagesJob
2024-01-09 22:03:52.559 +03:00 [INF] Now listening on: https://localhost:8080
2024-01-09 22:03:52.563 +03:00 [INF] Now listening on: http://localhost:44301
2024-01-09 22:03:52.566 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-09 22:03:52.569 +03:00 [INF] Hosting environment: Development
2024-01-09 22:03:52.571 +03:00 [INF] Content root path: D:\Projects\EpicTradeShop\src\Product\Product.Api
2024-01-09 22:03:52.573 +03:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2024-01-09 22:03:57.212 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
